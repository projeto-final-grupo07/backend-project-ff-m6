// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String @db.VarChar(127)
  email String @unique @db.VarChar(127)
  password String @db.VarChar(255)
  cpf String @db.VarChar(11)
  phone String @db.VarChar(12)
  birthDate DateTime
  describe String @db.VarChar(255)
  typeAccount Boolean @default(false)
  is_active Boolean @default(true)
  passwordResetToken String?
  passwordResetExpires DateTime?
  Address Address?
  Vehicle Vehicle[]
  Message Message[]

  @@map("user")
}

model Address{
  id String @id @default(uuid())
  cep String @db.VarChar(8)
  state String @db.VarChar(2)
  city String @db.VarChar(255)
  street String @db.VarChar(255)
  number String @db.VarChar(10)
  complement String @db.VarChar(255)
  user_id String @unique
  user User @relation(fields: [user_id], references: [id])

  @@map("address")
}

model Vehicle {
  id String @id @default(uuid())
  typeOffer Boolean @default(false)
  title String @db.VarChar(255)
  year String @db.VarChar(4)
  mileage String @db.VarChar(10)
  price Decimal @db.Decimal(8,2)
  describe String @db.VarChar(255)
  typeVehicles Boolean @default(false)
  coverImg String
  isActive Boolean @default(true)
  GalleryImgs GalleryImg[]
  Message Message[]
  user_id String
  user User @relation(fields: [user_id], references: [id])

  @@map("vehicles")
}

model GalleryImg {
  id String @id @default(uuid())
  url String
  vehicle_id String
  vehicle Vehicle @relation(fields: [vehicle_id], references: [id])

  @@map("galleryImgs")
}

model Message{
  id String @id @default(uuid())
  comment String @db.VarChar(255)
  createdAt DateTime @default(now())
  user_id String
  user User @relation(fields: [user_id], references: [id])
  vehicle_id String
  vehicle Vehicle @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
  

  @@map("message")
}